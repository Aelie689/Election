name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Run on an Ubuntu environment
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./front-end
        run: npm install

      # Step 3: Build frontend (React)
      - name: Build frontend
        working-directory: ./front-end
        run: CI=false npm run build

      # Step 4: Add EC2 host key to known hosts
      - name: Add EC2 host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 54.198.154.79 >> ~/.ssh/known_hosts
          ssh-keyscan -H 3.220.169.199 >> ~/.ssh/known_hosts  

      # Step 5: Save SSH private key to a file
      - name: Save secret to file
        run: |
          echo "$SSH_PRIVATE_KEY" > private-key.pem
          chmod 600 private-key.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 6: SSH into EC2, update code, copy build, and restart services on all instances
      - name: SSH into EC2 instances and update code, build, and restart services
        run: |
          for EC2 in "54.198.154.79" "3.220.169.199"; do
            ssh -i private-key.pem ubuntu@$EC2 << 'EOF'
              # Navigate to the backend directory and pull the latest code
              cd ~/DES424_ElectionDashboard/back-end
              git pull origin main --rebase
              npm install  # Install any missing dependencies

              # Start backend using PM2 (if not already running)
              pm2 start back-end --name back-end || pm2 restart back-end
              pm2 save  # Save the pm2 process for auto-restart

              # Navigate to the frontend directory, pull latest code, and rebuild
              cd ~/DES424_ElectionDashboard/front-end
              git pull origin main --rebase
              npm install  # Install any missing dependencies
              npm run build  # Rebuild the frontend

              # Copy the build directory to the appropriate location for Nginx
              sudo cp -r ~/DES424_ElectionDashboard/front-end/build/* /var/www/frontend/

              # Restart Nginx to serve the new build
              sudo systemctl restart nginx
          EOF
          done